package blackhole;

option java_package = "com.dp.blackhole.protocol.control";
option java_outer_classname = "MessagePB";

import "AppReg.proto";
import "AssignBroker.proto";
import "RecoveryRoll.proto";
import "ReadyStream.proto";
import "ReadyUpload.proto";
import "RollID.proto";
import "Failure.proto";
import "NoAvailableNode.proto";
import "Retire.proto";
import "ConfReq.proto";
import "ConfRes.proto";
import "DumpReply.proto";
import "RemoveConf.proto";
import "BrokerReg.proto";
import "DumpApp.proto";
import "ConsumerReg.proto";
import "AssignConsumer.proto";
import "OffsetCommit.proto";
import "TopicReport.proto";
import "Restart.proto";
import "QuitAndClean.proto";
import "RollClean.proto";
import "DumpConsumerGroup.proto";
import "SnapshotOp.proto";
import "PauseStream.proto";
import "ProducerReg.proto";
import "ProducerIdAssign.proto";
import "NoavailableConf.proto";
import "AssignPartition.proto";
import "PartitionRequireBroker.proto";
import "ConsumerExit.proto";
import "Heartbeat.proto";
import "LogNotFound.proto";

message Message {
    enum MessageType {
        HEARTBEART = 1;
        APP_REG = 2;
        BROKER_REG = 3;
        ASSIGN_BROKER = 4;
        READY_STREAM = 5;
        READY_UPLOAD = 6;
        UPLOAD_ROLL = 7;
        UPLOAD_SUCCESS = 8;
        UPLOAD_FAIL = 9;
        RECOVERY_ROLL = 10;
        RECOVERY_SUCCESS = 11;
        RECOVERY_FAIL = 12;
        FAILURE = 13;
        NO_AVAILABLE_NODE = 14;
        UNRECOVERABLE = 15;
        MANUAL_RECOVERY_ROLL =16;
        DUMP_STAT = 17;
        RETIRE_STREAM = 18;
        CONF_REQ = 19;
        CONF_RES = 20;
        NO_AVAILABLE_CONF = 21;
        DUMP_CONF = 22;
        DUMP_REPLY = 23;
        LIST_APPS = 24;
        REMOVE_CONF = 25;
        DUMP_APP = 26;
        CONSUMER_REG = 27;
        ASSIGN_CONSUMER = 28;
        OFFSET_COMMIT = 29;
        TOPIC_REPORT = 30;
        CONSUMER_REG_FAIL = 31;
        MAKR_UNRECOVERABLE = 32;
        LIST_IDLE = 33;
        RESTART = 34;
        QUIT = 35;
        CLEAN = 36;
        ROLL_CLEAN = 37;
        DUMP_CONSUMER_GROUP = 38;
        LIST_CONSUMER_GROUP = 39;
        SNAPSHOT_OP = 40;
        PAUSE_STREAM = 41;
        PRODUCER_REG = 42;
        PRODUCER_ID_ASSIGN = 43;
        ASSIGN_PARTITION = 44;
        PARTITION_REQUIRE_BROKER = 45;
        UNRESOLVED_CONNECTION = 46;
        CONSUMER_EXIT = 47;
        LOG_NOT_FOUND = 49;
    }

    required MessageType type = 1;
    optional AppReg appReg = 2;
    optional AssignBroker assignBroker = 3;
    optional ReadyUpload readyUpload = 4;
    optional RecoveryRoll recoveryRoll = 5;
    optional ReadyStream readyStream = 6;
    optional RollID rollID = 7;
    optional Failure failure = 8;
    optional NoAvailableNode noAvailableNode = 9;
    optional Retire retire = 10;
    optional ConfRes confRes = 11;
    optional DumpReply dumpReply = 12;
    optional RemoveConf removeConf = 13;
    optional BrokerReg brokerReg =14;
    optional DumpApp dumpApp = 15;
    optional ConsumerReg consumerReg = 16;
    optional AssignConsumer assignConsumer = 17;
    optional OffsetCommit offsetCommit = 18;
    optional TopicReport topicReport = 19;
    optional Restart restart = 20;
    optional Quit quit = 21;
    optional Clean clean = 22;
    optional RollClean rollClean = 23;
    optional DumpConsumerGroup dumpConsumerGroup = 24;
    optional SnapshotOp snapshotOp = 25;
    optional PauseStream pauseStream = 26;
    optional ConfReq confReq = 27;
    optional NoavailableConf noavailableConf = 28;
    optional ProducerReg producerReg = 29;
    optional ProducerIdAssign producerIdAssign = 30;
    optional AssignPartition assignPartition = 31;
    optional PartitionRequireBroker partitionRequireBroker = 32;
    optional ConsumerExit consumerExit = 33;
    optional Heartbeat heartbeat = 34;
    optional LogNotFound logNotFound = 35;
}